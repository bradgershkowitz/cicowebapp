<%/*  this is a super simple dashboard that can be displayed to a user after
login. after login and passport authentication, we get access to the user
object, user.name is an element of this object; also has a logout
button*/%>

  <%# sidebar file and main panel%>
    <% include ./partials/navbar %>
      <% include ./partials/mainpanel %>
        <style>
          .center-progressbar {
            position: absolute;
            left: 50%;
            transform: translate(-50%, -0%);
          }

          body {
            margin-top: 20px;
          }

          .glyphicon {
            margin-right: 5px;
          }

          .rating .glyphicon {
            font-size: 22px;
          }

          .rating-num {
            margin-top: 0px;
            font-size: 54px;
          }

          .progress {
            margin-bottom: 5px;
          }

          .progress-bar {
            text-align: left;
          }

          .rating-desc .col-md-3 {
            padding-right: 0px;
          }

          .sr-only {
            margin-left: 5px;
            overflow: visible;
            clip: auto;
          }
        </style>


        <!-- Jquery libraries -->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.5/css/bootstrap.min.css">

        <!-- Daypicker libraries -->
        <script type="text/javascript" src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
        <link rel="stylesheet" href="https://formden.com/static/cdn/bootstrap-iso.css" />
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/js/bootstrap-datepicker.min.js"></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/css/bootstrap-datepicker3.css"
        />

        <script type="text/javascript">
          $(document).ready(function ($) {

            // function is a built in jquery calendar, this will allow us to make requests to the database by date
            function callDatePicker() {
              var date_input = $('input[name="date"]'); //our date input has the name "date"
              var container = $('.bootstrap-iso form').length > 0 ? $('.bootstrap-iso form').parent() : "body";
              var options = {
                format: 'mm/dd/yyyy',
                container: container,
                todayHighlight: true,
                autoclose: true,
              };
              date_input.datepicker(options);

            }
            //call the datepicker before working with the table data
            callDatePicker();

            //this is example ajax data, can be replaced by data that comes from a database, is a json object
            //query database using date and username for current meals, store in this matrix
            var ajax_data =
              [
                { food: "Pizza", calories: 200, carbs: 25, fats: 20, proteins: 16, sodium: 235, sugars: 10, time: '5:06' },
                { food: "Pizza", calories: 200, carbs: 25, fats: 20, proteins: 16, sodium: 235, sugars: 10, time: '5:06' },
                { food: "Eggs", calories: 200, carbs: 25, fats: 20, proteins: 16, sodium: 235, sugars: 10, time: '5:06' }
              ]

            //we will place the goal data, to be imported from the database within each day here
            var caloriesGoal = "<%= caloriesGoal %>";
            var carbsGoal = "<%= carbsGoal %>";
            var fatsGoal = "<%= fatsGoal %>";
            var proteinsGoal = "<%= proteinsGoal %>";
            var sodiumGoal = "<%= sodiumGoal %>";
            var sugarsGoal = "<%= sugarsGoal %>";

            //we will place the current date imported from the db here
            var displayedDate = "<%= days.dateString %>";
            $(document).find('.displayedDate').html(displayedDate);

            //inserts a random id like how mongodb does it, gets called when creating the row
            //instead we will fetch the rowid from mongodb
            var random_id = function () {
              var id_num = Math.random().toString(9).substr(2, 3);
              var id_str = Math.random().toString(36).substr(2);

              return id_num + id_str;
            }

            //CALCULATE GOALS TO UPDATE
            //this function will calculate the goals and update them at the top of the table
            function calculateGoal() {

              //uses goals object imported from database
              var updatedCaloriesGoal = caloriesGoal - totalCalories;
              var updatedCarbsGoal = carbsGoal - totalCarbs;
              var updatedProteinsGoal = proteinsGoal - totalProteins;
              var updatedFatsGoal = fatsGoal - totalFats;

              //updates html page
              $(document).find('.goals').html(updatedCaloriesGoal);
              $(document).find('.proteins').html(updatedProteinsGoal + ' g');
              $(document).find('.fats').html(updatedFatsGoal + ' g');
              $(document).find('.carbs').html(updatedCarbsGoal + ' g');

              //update progress bar using a percentage
              var updatedProgressBar_calories = Math.floor((totalCalories / caloriesGoal) * 100);
              var updatedProgressBar_proteins = Math.floor((totalProteins / proteinsGoal) * 100);
              var updatedProgressBar_carbs = Math.floor((totalCarbs / carbsGoal) * 100);
              var updatedProgressBar_fats = Math.floor((totalFats / fatsGoal) * 100);

              //finds progress-bar-calories id, selects style attribute and sets to new value
              $('#progress-bar-calories').attr('style', "width: " + updatedProgressBar_calories + "%");
              $('#progress-bar-fats').attr('style', "width: " + updatedProgressBar_fats + "%");
              $('#progress-bar-carbs').attr('style', "width: " + updatedProgressBar_carbs + "%");
              $('#progress-bar-proteins').attr('style', "width: " + updatedProgressBar_proteins + "%");

            }

            //CALCULATE TOTALS ROW
            //this function will calculate the totals row, and update it. Will use function in .save and .delete, as well as page load
            function calculateTotal() {

              //initialize total sums
              totalCalories = 0;
              totalCarbs = 0;
              totalFats = 0;
              totalProteins = 0;
              totalSodium = 0;
              totalSugars = 0;

              //need to loop through all rows and keep a running sum
              $(document).find('.row_data').each(function (index, val) {
                let col_name = $(this).attr('col_name');
                let col_val = $(this).html();

                //switch case using the column header, add to the running sum for each column
                switch (col_name) {
                  case "Food":
                    break;
                  case "Calories":
                    totalCalories += parseInt(col_val);
                    break;
                  case "Carbs":
                    totalCarbs += parseInt(col_val);
                    break;
                  case "Fats":
                    totalFats += parseInt(col_val);
                    break;
                  case "Proteins":
                    totalProteins += parseInt(col_val);
                    break;
                  case "Sodium":
                    totalSodium += parseInt(col_val);
                    break;
                  case "Sugars":
                    totalSugars += parseInt(col_val);
                }
              })

              //new row
              let totalsRow = '';

              //append totals rows to end of table, all in one row, which calculated during loop, table row must be set to id (not id) to use the jquery functions
              totalsRow += '<tr id="totalsRowID">';
              totalsRow += '<td ><div col_name="Totals">' + 'Totals' + '</div></td>';
              totalsRow += '<td ><div col_name="Calories">' + totalCalories + '</div></td>';
              totalsRow += '<td ><div col_name="Carbs">' + totalCarbs + '</div></td>';
              totalsRow += '<td ><div col_name="Fats">' + totalFats + '</div></td>';
              totalsRow += '<td ><div col_name="Proteins">' + totalProteins + '</div></td>';
              totalsRow += '<td ><div col_name="Sodium">' + totalSodium + '</div></td>';
              totalsRow += '<td ><div col_name="Sugars">' + totalSugars + '</div></td>';
              totalsRow += '<td ><div col_name="Time">' + '---' + '</div></td>';
              totalsRow += '<td ><div col_name="Options">' + '---' + '</div></td>';
              totalsRow += '</tr>';

              //removes the previous totals row, and appends the new one
              $("#totalsRowID").remove();
              $("#dashboardTable").append(totalsRow);

              //calls updated goal function
              calculateGoal();

            };

            //this is where the table gets created on the front end, uses ajax syntax
            var tbl = '';

            tbl += '<table class="table table-hover" id = "dashboardTable">' //this uses a bootstrap table class, hover highlights the row

            //<thead> creates an opening head tag for the table
            tbl += '<thead>'; //header of table is uneditable, column names
            tbl += '<tr>';
            tbl += '<th>Food</th>';
            tbl += '<th>Calories (kcal)</th>';
            tbl += '<th>Carbs (g)</th>';
            tbl += '<th>Fats (g)</th>';
            tbl += '<th>Proteins (g)</th>';
            tbl += '<th>Sodium (mg)</th>';
            tbl += '<th>Sugars (g)</th>';
            tbl += '<th>Time</th>';
            tbl += '<th>Options</th>';
            tbl += '</tr>';
            tbl += '</thead>';

            //<tbody> creates an opening body tag for the table
            tbl += '<tbody>';

            //initialize total sums
            totalCalories = 0;
            totalCarbs = 0;
            totalFats = 0;
            totalProteins = 0;
            totalSodium = 0;
            totalSugars = 0;

            //this is where we use an ajax function to loop through the table, creates all the rows
            $.each(ajax_data, function (index, val) { //this is the for each function for jquery, loops through all rows

              //calls a function which outputs a random value for each row
              var id = random_id(); //uses the database id for each row when switching to backend

              //loop through ajax row data, append to a cell in the table, make editable by clicking
              tbl += '<tr id="' + id + '">';
              //tbl += '<td ><input type = "text" id = "first_column" class="row_data" col_name="Food" onclick = "this.select();" value = "' + val['food'] + '"></td>';
              tbl += '<td ><div id = "first_column" class="row_data" edit_type="click" col_name="Food" onclick = "this.select();">' + val['food'] + '</div></td>';
              tbl += '<td ><div class="row_data" edit_type="click" col_name="Calories">' + val['calories'] + '</div></td>';
              tbl += '<td ><div class="row_data" edit_type="click" col_name="Carbs">' + val['carbs'] + '</div></td>';
              tbl += '<td ><div class="row_data" edit_type="click" col_name="Fats">' + val['fats'] + '</div></td>';
              tbl += '<td ><div class="row_data" edit_type="click" col_name="Proteins">' + val['proteins'] + '</div></td>';
              tbl += '<td ><div class="row_data" edit_type="click" col_name="Sodium">' + val['sodium'] + '</div></td>';
              tbl += '<td ><div class="row_data" edit_type="click" col_name="Sugars">' + val['sugars'] + '</div></td>';
              tbl += '<td ><div col_name="Time">' + val['time'] + '</div></td>';

              //adds the edits button to the right column of the table, <td> is one cell of a table
              tbl += '<td>';
              tbl += '<span class="btn_edit" > <a href="#" class="btn btn-link " id="' + id + '" > Edit</a> </span>';

              //only show these buttons if edit button is clicked, add as a column to the table
              tbl += '<span class="btn_save"> <a href="#" class="btn btn-link"  id="' + id + '"> Save</a> | </span>';
              tbl += '<span class="btn_cancel"> <a href="#" class="btn btn-link" id="' + id + '"> Cancel</a> | </span>';
              tbl += '<span class="btn_remove"> <a href="#" class="btn btn-link" id="' + id + '"> Delete</a> </span>';

              //ends the table data and table row
              tbl += '</td>';
              tbl += '</tr>';

              //calculate totals for totals row using running sum
              totalCalories += val['calories'];
              totalCarbs += val['carbs'];
              totalFats += val['fats'];
              totalProteins += val['proteins'];
              totalSodium += val['sodium'];
              totalSugars += val['sugars'];
            });

            //add new food row to table after all meals
            tbl += '<tr id = "r2">';
            tbl += '<td ><div col_name="Food">' + '---' + '</div></td>';
            tbl += '<td ><div col_name="Calories">' + '---' + '</div></td>';
            tbl += '<td ><div col_name="Carbs">' + '---' + '</div></td>';
            tbl += '<td ><div col_name="Fats">' + '---' + '</div></td>';
            tbl += '<td ><div col_name="Proteins">' + '---' + '</div></td>';
            tbl += '<td ><div col_name="Sodium">' + '---' + '</div></td>';
            tbl += '<td ><div col_name="Sugars">' + '---' + '</div></td>';
            tbl += '<td ><div col_name="Time">' + '---' + '</div></td>';

            //adds the ADD button to the right column of the table, need to add an onclick event for btn_add
            tbl += '<td>';
            tbl += '<span class="btn_add" > <a href="#" class="btn btn-link" > Add</a> </span>';

            //ends the table data and table row
            tbl += '</td>';

            //end of table
            tbl += '</tbody>';
            tbl += '</table>'

            //THIS IS WHERE THE TABLE GETS OUTPUT TO THE TBL_DAY_DATA CLASS
            $(document).find('.tbl_day_data').html(tbl);

            //this finds the save, cancel, and delete button classes and hides them
            $(document).find('.btn_save').hide();
            $(document).find('.btn_cancel').hide();
            $(document).find('.btn_remove').hide();

            //recalculate total on loading page
            calculateTotal();

            //EDIT BUTTON
            //listen for clicking the physical EDIT button
            $(document).on('click', '.btn_edit', function (event) {

              event.preventDefault();

              //find tbl row and its ID closest to the click
              var tbl_row = $(this).closest('tr');
              var id = tbl_row.attr('id');

              //when clicking the edit button, show the save and cancel buttons
              tbl_row.find('.btn_save').show();
              tbl_row.find('.btn_cancel').show();

              //add this to create a remove row button, that gets shown during edit click
              tbl_row.find('.btn_remove').show();

              //hide edit button
              tbl_row.find('.btn_edit').hide();

              //make the whole row editable
              tbl_row.find('.row_data')
                .attr('contenteditable', 'true')
                .attr('edit_type', 'button')
                .css('padding', '3px')

                //this changes the background color when editing
                .css("color", "red")

              //I would like to add a method to automatically select all text in the first cell in the row on clicking edit
              // var column = tbl_row.find('.row_data').attr('col_name');
              // var thing = tbl_row.find('.row_data').html();
              // console.log(column);
              // console.log(thing);

              //--->add the original entry > start
              tbl_row.find('.row_data').each(function (index, val) {

                //this will help in case user decided to click on cancel button, save original entry
                $(this).attr('original_entry', $(this).html());
              });
            });

            //CANCEL BUTTON
            //if you hit the cancel button after opening the edit, rehide the options
            $(document).on('click', '.btn_cancel', function (event) {
              event.preventDefault();

              //finds row closest to click, returns id
              var tbl_row = $(this).closest('tr');
              var id = tbl_row.attr('id');

              //hide save and cancel and delete buttons
              tbl_row.find('.btn_save').hide();
              tbl_row.find('.btn_cancel').hide();
              tbl_row.find('.btn_remove').hide();

              //show edit button
              tbl_row.find('.btn_edit').show();

              //make the whole row editable
              tbl_row.find('.row_data')
                .attr('contenteditable', 'false')
                .css("color", "gray")
                .css('padding', '')

              tbl_row.find('.row_data').each(function (index, val) {
                $(this).html($(this).attr('original_entry'));
              });
            });

            //SAVE BUTTON
            //when you click the save button after opening the edit menu, rehide the buttons and save the whole row
            $(document).on('click', '.btn_save', function (event) {

              //NEEDS A METHOD TO UPDATE THE DATABASE
              //NEEDS TO ALSO UPDATE THE GOAL
              //NEEDS TO ALSO UPDATE THE PASS

              //calls calculate total function
              calculateTotal();

              event.preventDefault();

              //this chooses the closest row to the click and stores in a variable called tbl_row
              var tbl_row = $(this).closest('tr');

              //returns the id of tbl_row
              var id = tbl_row.attr('id');

              //hide save, cancel, and remove buttons
              tbl_row.find('.btn_save').hide();
              tbl_row.find('.btn_cancel').hide();
              tbl_row.find('.btn_remove').hide();

              //show edit button
              tbl_row.find('.btn_edit').show();

              //make the whole row editable
              tbl_row.find('.row_data')
                .attr('contenteditable', 'false')
                .css("color", "gray")
                .css('padding', '')

            });

            //DELETE BUTTON
            //when you click the save button after opening the edit menu, rehide the buttons and save the whole row
            $(document).on('click', '.btn_remove', function (event) {

              //NEEDS A METHOD TO UPDATE THE DATABASE
              //NEEDS TO ALSO UPDATE THE GOAL
              //NEEDS TO ALSO UPDATE THE PASS

              event.preventDefault();

              //this chooses the closest row to the click and stores in a variable called tbl_row
              var tbl_row = $(this).closest('tr');

              //returns the id of tbl_row
              var id = tbl_row.attr('id');

              //creates a string that can be ready by jquery remove function
              var row_id = '#' + id

              //removes row based on row id
              $(row_id).remove();

              //recalculates total after removing the row
              calculateTotal();

            });

            //DELETE BUTTON
            //when you click the save button after opening the edit menu, rehide the buttons and save the whole row
            $(document).on('click', '.btn_add', function (event) {

              //NEEDS A METHOD TO UPDATE THE DATABASE
              //NEEDS TO ALSO UPDATE THE GOAL
              //NEEDS TO ALSO UPDATE THE PASS

              event.preventDefault();

              //calls a function which outputs a random value for each row
              var id = random_id(); //uses the database id for each row when switching to backend
              let newRow = '';

              //gets current time
              let today = new Date();
              let time = today.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })

              //loop through ajax row data, append to a cell in the table, make editable by clicking
              newRow += '<tr id="' + id + '">';
              newRow += '<td ><div class="row_data" edit_type="click" col_name="Food">' + '---' + '</div></td>';
              newRow += '<td ><div class="row_data" edit_type="click" col_name="Calories">' + 0 + '</div></td>';
              newRow += '<td ><div class="row_data" edit_type="click" col_name="Carbs">' + 0 + '</div></td>';
              newRow += '<td ><div class="row_data" edit_type="click" col_name="Fats">' + 0 + '</div></td>';
              newRow += '<td ><div class="row_data" edit_type="click" col_name="Proteins">' + 0 + '</div></td>';
              newRow += '<td ><div class="row_data" edit_type="click" col_name="Sodium">' + 0 + '</div></td>';
              newRow += '<td ><div class="row_data" edit_type="click" col_name="Sugars">' + 0 + '</div></td>';
              newRow += '<td ><div col_name="Time">' + time + '</div></td>';

              //adds the edits button to the right column of the table, <td> is one cell of a table
              newRow += '<td>';
              newRow += '<span class="btn_edit" > <a href="#" class="btn btn-link " id="' + id + '" > Edit</a> </span>';

              //only show these buttons if edit button is clicked, add as a column to the table
              newRow += '<span class="btn_save"> <a href="#" class="btn btn-link"  id="' + id + '"> Save</a> | </span>';
              newRow += '<span class="btn_cancel"> <a href="#" class="btn btn-link" id="' + id + '"> Cancel</a> | </span>';
              newRow += '<span class="btn_remove"> <a href="#" class="btn btn-link" id="' + id + '"> Delete</a> </span>';

              //ends the table data and table row
              newRow += '</td>';
              newRow += '</tr>';

              //add row to table, #r2 references an id (the id in the add row)
              $(newRow).insertBefore("#r2");

              //this finds the save, cancel, and delete button classes and hides them
              $(document).find('.btn_save').hide();
              $(document).find('.btn_cancel').hide();
              $(document).find('.btn_remove').hide();

              //recalculates total after adding the row
              calculateTotal();

              //creates a string that can be ready by jquery remove function; we already have id from when we created the row
              var row_id = '#' + id

              //force click on edit button when adding, give it the row_id
              $(row_id).find('.btn_edit').click();

            });
          });

        </script>